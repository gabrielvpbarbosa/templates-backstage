apiVersion: scaffolder.backstage.io/v1beta3
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-template
kind: Template
metadata:
  name: template-folder-infra
  title: Crie Recursos de infraestrutura para sua aplicação
  description: Template para criar arquivos de infraestrutura para a aplicação
spec:
  owner: user:guest
  type: service

  # These parameters are used to generate the input form in the frontend, and are
  # used to gather input data for the execution of the template.
  parameters:
    - title: Fill in some steps
      required:
        - name
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5
    - title: Informações do projeto
      properties:
        appname:
          title: AppName
          type: string
          description: Nome do repositório da aplicação
          ui:autofocus: true
          ui:options:
            rows: 1
    - title: Select Resources AWS/Crosplanne
      properties:          
        secretsManagerEnabled:
          title: Secrets Manager
          type: boolean
          default: false
        s3Enabled:
          title: S3
          type: boolean
          default: false
        sesEnabled:
          title: sesEnabled
          type: boolean
          default: false
        dynamoDbEnabled:
          title: dynamoDbEnabled
          type: boolean
          default: false
        sqsEnabled:
          title: sqsEnabled
          type: boolean
          default: false
        snsEnabled:
          title: snsEnabled
          type: boolean
          default: false
    - title: Select Resources Kubernetes
      properties:
        deploymentEnabled:
          title: deploymentEnabled
          type: boolean
          default: false
        serviceEnabled:
          title: serviceEnabled
          type: boolean
          default: false
        ingressEnabled:
          title: ingressEnabled
          type: boolean
          default: false
        configMapEnabled:
          title: configMapEnabled
          type: boolean
          default: false
        autoscalingEnabled:
          title: autoscalingEnabled
          type: boolean
          default: false
        roleK8sEnabled:
          title: roleK8sEnabled
          type: boolean
          default: false
        redisStandaloneEnabled:
          title: redisStandaloneEnabled
          type: boolean
          default: false
        databaseEnabled:
          title: databaseEnabled
          type: boolean
          default: false
        envFileEnabled:
          title: envFileEnabled
          type: boolean
          default: false
  # These steps are executed in the scaffolder backend, using data that we gathered
  # via the parameters above.
  steps:
    # Each step executes an action, in this case one templates files into the working directory.
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: https://github.com/gabrielvpbarbosa/templates-backstage/tree/main/template-infra
        targetPath: template-infra
        values:
          name: ${{parameters.AppName}}
          secretsManagerEnabled: ${{parameters.secretsManagerEnabled}}
          s3Enabled: ${{parameters.s3Enabled}} 
          sesEnabled: ${{parameters.sesEnabled}} 
          dynamoDbEnabled: ${{parameters.dynamoDbEnabled}} 
          sqsEnabled: ${{parameters.sqsEnabled}} 
          snsEnabled: ${{parameters.snsEnabled}} 

          ### KUBERNETES ###
          deploymentEnabled: ${{parameters.deploymentEnabled}} 
          serviceEnabled: ${{parameters.serviceEnabled}} 
          ingressEnabled: ${{parameters.ingressEnabled}} 
          configMapEnabled: ${{parameters.configMapEnabled}} 
          autoscalingEnabled: ${{parameters.autoscalingEnabled}} 
          roleK8sEnabled: ${{parameters.roleK8sEnabled}} 
          redisStandaloneEnabled: ${{parameters.redisStandaloneEnabled}} 
          databaseEnabled: ${{parameters.databaseEnabled}} 
          envFileEnabled: ${{parameters.envFileEnabled}} 
    # This step publishes the contents of the working directory to GitHub.
    # If you or your organization prefer another default branch name over 'main'
    # you can change that here.
    - id: push
      name: push
      action: github:repo:push
      input:
        description: This is ${{ parameters.name }}
        repoUrl: github.com?repo=repositorio-infra&owner=gabrielvpbarbosa
        defaultBranch: 'develop'

    # The final step is to register our new component in the catalog.
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: https://raw.githubusercontent.com/gabrielvpbarbosa/repositorio-infra/refs/heads/main/${{ name }}
        catalogInfoPath: '/catalog-info.yaml'
        
  # Outputs are displayed to the user after a successful execution of the template.
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
